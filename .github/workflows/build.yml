name: Build

on:
  push:
    branches-ignore:
    - workflows

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Install build dependencies
      run: |
        sudo apt-get -y update
        sudo apt-get -y install build-essential

    - name: Prepare prebuilt cross-compile toolchain
      run: |
        mkdir ~/toolchain
        curl -L https://github.com/usertam/tc-build/releases/latest/download/tc-build-install.tar.xz | tar -C ~/toolchain -xJ

    - name: Prepare build ccache
      uses: hendrikmuhs/ccache-action@v1

    - name: Prepare build environment
      run: |
        echo "$HOME/toolchain/bin" >> $GITHUB_PATH
        echo "ARCH=arm64" >> $GITHUB_ENV
        echo "CROSS_COMPILE=aarch64-linux-gnu-" >> $GITHUB_ENV
        echo "CROSS_COMPILE_ARM32=arm-linux-gnueabi-" >> $GITHUB_ENV
        echo '' > .scmversion

    - name: Compile the kernel
      run: make -j$(nproc) CC="ccache clang" O=out usertam_defconfig all

    - name: Upload built kernel image
      uses: actions/upload-artifact@v2
      if: success()
      with:
        path: out/arch/arm64/boot/Image.gz-dtb

    - name: Fetch previous tags
      if: success()
      run: git fetch --depth=1 origin 'refs/tags/*:refs/tags/*' || true

    - name: Generate next tag version
      id: tag_version
      if: success()
      run: >
        KERN_VER="v$(make CC=clang O=out -s kernelrelease)";
        PREV_VER=$(git tag -l "${KERN_VER}*" --sort='-v:refname' | head -1);
        [ -n "$PREV_VER" ] && 
          NEXT_VER=$(awk -F. '/[0-9]+\./{$NF++;print}' OFS=. <<< "$PREV_VER") || 
          NEXT_VER="${KERN_VER}.0";
        echo "::set-output name=value::${NEXT_VER}";

    - name: Create tag
      uses: actions/github-script@v3
      if: success()
      with:
        github-token: ${{ github.token }}
        script: |
          github.git.createRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: "refs/tags/${{ steps.tag_version.outputs.value }}",
            sha: context.sha
          })

    - name: Publish release
      uses: softprops/action-gh-release@v1
      if: success()
      with:
        name: ${{ steps.tag_version.outputs.value }}
        tag_name: ${{ steps.tag_version.outputs.value }}
        files: out/arch/arm64/boot/Image.gz-dtb
